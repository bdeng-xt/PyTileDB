#include "pybind_query.h" 

void init_tiledb_Query(pybind11::module& m) {
	pybind11::class_<tiledb::Query, std::shared_ptr<tiledb::Query> >(m,"Query")
		.def(py::init<const tiledb::Context &,const tiledb::Array &,tiledb_query_type_t>())
		.def(py::init<const tiledb::Context &,const tiledb::Array &>())
		.def(py::init<const tiledb::Query>())
		.def(py::init<tiledb::Query &>())
//ignore_keywords 	tiledb::Query & operator=( const tiledb::Query &)
//ignore_keywords 	tiledb::Query & operator=( tiledb::Query & &)
//ignore_keywords 	std::shared_ptr<tiledb_query_t > ptr()
		.def("query_type", &tiledb::Query::query_type)
		.def("set_layout", &tiledb::Query::set_layout, py::arg("layout"))
		.def("query_layout", &tiledb::Query::query_layout)
		.def("query_status", &tiledb::Query::query_status)
		.def("has_results", &tiledb::Query::has_results)
		.def("submit", &tiledb::Query::submit)
//ignore_templatefunction 	void submit_async( const Fn & callback)
		.def("submit_async", (void (tiledb::Query::*)())(&tiledb::Query::submit_async))
		.def("finalize", &tiledb::Query::finalize)
//ignore_keywords 	std::unordered_map<std::string, std::pair<uint64_t, uint64_t> > result_buffer_elements()
//ignore_templatefunction 	tiledb::Query & add_range( uint32_t dim_idx, T start, T end, T stride)
		.def("add_range", (tiledb::Query & (tiledb::Query::*)(uint32_t,const std::string &,const std::string &))(&tiledb::Query::add_range), py::arg("dim_idx"), py::arg("start"), py::arg("end"))
		.def("range_num", &tiledb::Query::range_num, py::arg("dim_idx"))
//ignore_templatefunction 	std::array<T, 3 > range( unsigned dim_idx, uint64_t range_idx)
		.def("range", (std::array<std::string, 2 > (tiledb::Query::*)(unsigned,uint64_t))(&tiledb::Query::range), py::arg("dim_idx"), py::arg("range_idx"))
		.def("est_result_size", &tiledb::Query::est_result_size, py::arg("attr_name"))
		.def("est_result_size_var", &tiledb::Query::est_result_size_var, py::arg("attr_name"))
		.def("fragment_num", &tiledb::Query::fragment_num)
		.def("fragment_uri", &tiledb::Query::fragment_uri, py::arg("idx"))
		.def("fragment_timestamp_range", &tiledb::Query::fragment_timestamp_range, py::arg("idx"))
//ignore_keywords 	tiledb::Query & set_subarray( const T * pairs, uint64_t size)
//ignore_templatefunction 	tiledb::Query & set_subarray( const Vec & pairs)
//ignore_templatefunction 	tiledb::Query & set_subarray( const std::initializer_list<T> & l)
//ignore_templatefunction 	tiledb::Query & set_subarray( const std::vector<std::array<T, 2> > & pairs)
//ignore_templatefunction 	TILEDB_DEPRECATED Query & set_coordinates( T * buf, uint64_t size)
//ignore_templatefunction 	TILEDB_DEPRECATED Query & set_coordinates( Vec & buf)
//ignore_templatefunction 	tiledb::Query & set_buffer( const std::string & name, T * buff, uint64_t nelements)
//ignore_templatefunction 	tiledb::Query & set_buffer( const std::string & name, std::vector<T> & buf)
//ignore_keywords 	tiledb::Query & set_buffer( const std::string & name, void * buff, uint64_t nelements)
//ignore_templatefunction 	tiledb::Query & set_buffer( const std::string & name, uint64_t * offsets, uint64_t offset_nelements, T * data, uint64_t data_nelements)
//ignore_keywords 	tiledb::Query & set_buffer( const std::string & name, uint64_t * offsets, uint64_t offset_nelements, void * data, uint64_t data_nelements)
//ignore_templatefunction 	tiledb::Query & set_buffer( const std::string & name, std::vector<uint64_t> & offsets, std::vector<T> & data)
//ignore_templatefunction 	tiledb::Query & set_buffer( const std::string & name, std::pair<std::vector<uint64_t>, std::vector<T> > & buf)
		.def("set_buffer", (tiledb::Query & (tiledb::Query::*)(const std::string &,std::vector<uint64_t> &,std::string &))(&tiledb::Query::set_buffer), py::arg("name"), py::arg("offsets"), py::arg("data"))
		.def_static("to_status", &tiledb::Query::to_status, py::arg("status"))
		.def_static("to_str", &tiledb::Query::to_str, py::arg("type"))
		;

}

