#include "pybind_string_util.h" 

void init_tiledb_StringUtil(pybind11::module& m) {
	pybind11::class_<tiledb::StringUtil>(m,"StringUtil")
//ignore_constructor_staticclass 	 StringUtil()
//ignore_constructor_staticclass 	 StringUtil( const StringUtil &)
//ignore_constructor_staticclass 	 StringUtil( StringUtil & &)
//ignore_destructor 	 ~StringUtil()
//ignore_keywords 	StringUtil & operator=( const StringUtil &)
//ignore_keywords 	StringUtil & operator=( StringUtil & &)
		.def_static("isBlank", static_cast< bool (*)(char) >(&tiledb::StringUtil::isBlank))
		.def_static("isBlank", static_cast< bool (*)(const char *) >(&tiledb::StringUtil::isBlank))
		.def_static("isBlank", static_cast< bool (*)(const std::string &) >(&tiledb::StringUtil::isBlank))
		.def_static("toLower", static_cast< char (*)(char) >(&tiledb::StringUtil::toLower))
		.def_static("toUpper", static_cast< char (*)(char) >(&tiledb::StringUtil::toUpper))
		.def_static("toLower", static_cast< std::string (*)(const std::string &) >(&tiledb::StringUtil::toLower))
		.def_static("toUpper", static_cast< std::string (*)(const std::string &) >(&tiledb::StringUtil::toUpper))
		.def_static("toLTrim", &tiledb::StringUtil::toLTrim, py::arg("str"))
		.def_static("toRTrim", &tiledb::StringUtil::toRTrim, py::arg("str"))
		.def_static("toTrim", &tiledb::StringUtil::toTrim, py::arg("str"))
		.def_static("toTrimDotSuffix", &tiledb::StringUtil::toTrimDotSuffix, py::arg("str"))
		.def_static("getDotSuffix", &tiledb::StringUtil::getDotSuffix, py::arg("str"))
		.def_static("toDouble", &tiledb::StringUtil::toDouble, py::arg("str"))
		.def_static("toInt", &tiledb::StringUtil::toInt, py::arg("str"))
		.def_static("toInt64", &tiledb::StringUtil::toInt64, py::arg("str"))
		.def_static("contains", static_cast< bool (*)(const std::string &,const char) >(&tiledb::StringUtil::contains))
		.def_static("contains", static_cast< bool (*)(const std::string &,const char *) >(&tiledb::StringUtil::contains))
		.def_static("contains", static_cast< bool (*)(const std::string &,const std::string &) >(&tiledb::StringUtil::contains))
		.def_static("countAll", &tiledb::StringUtil::countAll, py::arg("str"), py::arg("substr"))
		.def_static("replaceFirst", &tiledb::StringUtil::replaceFirst, py::arg("str"), py::arg("substr"), py::arg("with"))
		.def_static("replaceLast", &tiledb::StringUtil::replaceLast, py::arg("str"), py::arg("substr"), py::arg("with"))
		.def_static("replaceAll", &tiledb::StringUtil::replaceAll, py::arg("str"), py::arg("substr"), py::arg("with"))
		.def_static("startsWith", &tiledb::StringUtil::startsWith, py::arg("str"), py::arg("prefix"))
		.def_static("endsWith", &tiledb::StringUtil::endsWith, py::arg("str"), py::arg("suffix"))
//ignore_keywords 	bool startsWithAnyOfWords( const std::string & str, const std::set<std::string> & wordset)
//ignore_keywords 	bool endsWithAnyOfWords( const std::string & str, const std::set<std::string> & wordset)
//ignore_keywords 	bool isAnyOfWordsInStr( const std::string & str, const std::set<std::string> & wordset)
//ignore_keywords 	bool isAllOfWordsInStr( const std::string & str, const std::set<std::string> & wordset)
		.def_static("split", static_cast< std::vector<std::string > (*)(const std::string &,char,bool) >(&tiledb::StringUtil::split))
		.def_static("split", static_cast< std::vector<std::string > (*)(const std::string &,const std::string &,bool) >(&tiledb::StringUtil::split))
		.def_static("splitByAny", &tiledb::StringUtil::splitByAny, py::arg("str"), py::arg("delimiters"), py::arg("skip_empty"))
		.def_static("join", static_cast< std::string (*)(const std::vector<std::string> &,bool,bool) >(&tiledb::StringUtil::join))
		.def_static("join", static_cast< std::string (*)(const std::vector<std::string> &,char,bool,bool) >(&tiledb::StringUtil::join))
		.def_static("join", static_cast< std::string (*)(const std::vector<std::string> &,const char *,bool,bool) >(&tiledb::StringUtil::join))
		.def_static("join", static_cast< std::string (*)(const std::vector<std::string> &,const std::string &,bool,bool) >(&tiledb::StringUtil::join))
		.def_static("splitStrToDoubleVector", &tiledb::StringUtil::splitStrToDoubleVector, py::arg("str"), py::arg("delimiter"))
		.def_static("joinDoubleVectorToStr", &tiledb::StringUtil::joinDoubleVectorToStr, py::arg("vs"), py::arg("delimiter"), py::arg("precesion"))
		.def_static("splitStrToIntVector", &tiledb::StringUtil::splitStrToIntVector, py::arg("str"), py::arg("delimiter"))
		.def_static("joinIntVectorToStr", &tiledb::StringUtil::joinIntVectorToStr, py::arg("vs"), py::arg("delimiter"))
		.def_static("splitStrToInt64Vector", &tiledb::StringUtil::splitStrToInt64Vector, py::arg("str"), py::arg("delimiter"))
		.def_static("joinInt64VectorToStr", &tiledb::StringUtil::joinInt64VectorToStr, py::arg("vs"), py::arg("delimiter"))
//ignore_keywords 	std::string toString( const T & value)
//ignore_keywords 	T fromString( const std::string & str)
		.def_static("intToStr", &tiledb::StringUtil::intToStr, py::arg("i"))
		.def_static("uintToStr", &tiledb::StringUtil::uintToStr, py::arg("i"))
		.def_static("longToStr", &tiledb::StringUtil::longToStr, py::arg("l"))
		.def_static("longlongToStr", &tiledb::StringUtil::longlongToStr, py::arg("ll"))
		.def_static("size_tToStr", &tiledb::StringUtil::size_tToStr, py::arg("st"))
		.def_static("int64ToStr", &tiledb::StringUtil::int64ToStr, py::arg("i"))
		.def_static("doubleToStr", &tiledb::StringUtil::doubleToStr, py::arg("d"))
		.def_static("boolToStr", &tiledb::StringUtil::boolToStr, py::arg("b"))
		;

}

